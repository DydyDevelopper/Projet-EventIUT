<?php
// src/biblinum/LivresBundle/DataFixtures/ORM/chargerLivresEtAuteurs.php

namespace biblinum\LivresBundle\DataFixtures\ORM;
use Doctrine\Common\DataFixtures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use biblinum\LivresBundle\Entity\Formation;
use biblinum\LivresBundle\Entity\offre;

class Formations implements FixtureInterface
{
    // Dans l'argument de la mÃ©thode load, l'objet $manager est l'EntityManager
    public function load(ObjectManager $manager)
    {
        /* ******************************************************* */
        /* CrÃ©ation du livre "Le langage C++" de Bjarne Stroustrup */
        /* ******************************************************* */

        // ON CREE L'AUTEUR "Bjarne Stroustrup"
        $formationStroustrup = new Auteur();
        $formationStroustrup->setNom("Stroustrup");
        $formationStroustrup->setPrenom("Bjarne");

        // On rend l'auteur persistant pour pouvoir y faire rÃ©fÃ©rence ensuite lorsqu'on crÃ©Ã© le livre
        $manager->persist($auteurStroustrup);

        // ON CREE LE LIVRE "Le langage C++" de Bjarne Stroustrup        
        $livreLeLangageCpp = new Livre();
        $livreLeLangageCpp->setTitre("Le langage C++");
        $livreLeLangageCpp->setCouverture("http://www.iutbayonne.univ-pau.fr/~etchever/biblinum/leLangageCpp.jpg");
        
		$livreLeLangageCpp->setResume("Soigneusement revu et corrigÃ©, Ã©crit par Bjarne Stroustrup, (le crÃ©ateur de ce langage), 
		ce livre est l'ouvrage de rÃ©fÃ©rence le plus complet et le plus lu dans le monde sur le sujet.
		Plus de 700 000 programmeurs et Ã©tudiants ont tirÃ© bÃ©nÃ©fice de ce livre dans ses Ã©ditions prÃ©cÃ©dentes.
		CentrÃ© sur les bibliothÃ¨ques standards, et les principales techniques de conception, 
		Le langage C++ propose une couverture complÃ¨te de tous les composants et dispositifs de ce langage.
		Deux annexes sur les bibliothÃ¨ques locales et standard de sÃ©curitÃ© complÃ¨tent le livre.");
        
		$livreLeLangageCpp->setDatePar(new \DateTime('2004/06/16')); // Attention, il faut donner une date au format mysql pour l'enregistrement en BD: AAAA/MM/JJ
        $livreLeLangageCpp->setNomEdit("Pearson Education");
        $livreLeLangageCpp->setEmpruntable(true);
        $livreLeLangageCpp->addAuteur($auteurStroustrup);

        // On rend le livre persistant
        $manager->persist($livreLeLangageCpp);




        /* ******************************************************* */
        /* CrÃ©ation du livre "Coder proprement" de Robert Martin   */
        /* ******************************************************* */

        // ON CREE L'AUTEUR "Robert Martin"
        $auteurMartin = new Auteur();
        $auteurMartin->setNom("Robert");
        $auteurMartin->setPrenom("Martin");

        // On rend l'auteur persistant pour pouvoir y faire rÃ©fÃ©rence ensuite lorsqu'on crÃ©Ã© le livre
        $manager->persist($auteurMartin);

        // ON CREE LE LIVRE "Coder proprement" de Robert Martin        
        $livreCoderProprement = new Livre();
        $livreCoderProprement->setTitre("Coder proprement");
        $livreCoderProprement->setCouverture("http://www.iutbayonne.univ-pau.fr/~etchever/biblinum/coderProprement.jpg");
        $livreCoderProprement->setResume("Si un code sale peut fonctionner, il peut Ã©galement compromettre la pÃ©rennitÃ© d'une entreprise de dÃ©veloppement de logiciels. Chaque annÃ©e, du temps et des ressources sont gaspillÃ©s Ã  cause d'un code mal Ã©crit. Toutefois, ce n'est pas une fatalitÃ©. GrÃ¢ce Ã  cet ouvrage, vous apprendrez Ã  rÃ©diger du bon code, ainsi qu'Ã  le nettoyer Â« Ã  la volÃ©e Â», et vous obtiendrez des applications plus robustes, plus Ã©volutives et donc plus durables. Concret et pÃ©dagogique, ce manuel se base sur les bonnes pratiques d'une Ã©quipe de dÃ©veloppeurs aguerris rÃ©unie autour de Robert C. Martin, expert logiciel reconnu. Il vous inculquera les valeurs d'un artisan du logiciel et fera de vous un meilleur programmeur. Coder proprement est dÃ©composÃ© en trois parties. La premiÃ¨re dÃ©crit les principes, les motifs et les pratiques employÃ©s dans l'Ã©criture d'un code propre. La deuxiÃ¨me est constituÃ©e de plusieurs Ã©tudes de cas Ã  la complexitÃ© croissante. Chacune d'elles est un exercice de nettoyage: vous partirez d'un exemple de code prÃ©sentant certains problÃ¨mes, et l'auteur vous expliquera comment en obtenir une version saine et performante. La troisiÃ¨me partie, enfin, sera votre rÃ©compense. Son unique chapitre contient une liste d'indicateurs Ã©prouvÃ©s par l'auteur qui vous seront prÃ©cieux pour repÃ©rer efficacement les dÃ©fauts de votre code.");
        $livreCoderProprement->setDatePar(new \DateTime('2013/04/12')); // Attention, il faut donner une date au format mysql pour l'enregistrement en BD: AAAA/MM/JJ
        $livreCoderProprement->setNomEdit("Pearson");
        $livreCoderProprement->setEmpruntable(false);
        $livreCoderProprement->addAuteur($auteurMartin);

        // On rend le livre persistant
        $manager->persist($livreCoderProprement);



        /* ********************************************************* */
        /* CrÃ©ation du livre "Tout sur le code" de Steve McConnell   */
        /* ********************************************************* */

        // ON CREE L'AUTEUR "Steve McConnel"
        $auteurMcConnel = new Auteur();
        $auteurMcConnel->setNom("McConnel");
        $auteurMcConnel->setPrenom("Steve");

        // On rend l'auteur persistant pour pouvoir y faire rÃ©fÃ©rence ensuite lorsqu'on crÃ©Ã© le livre
        $manager->persist($auteurMcConnel);

        // ON CREE LE LIVRE "Tout sur le code"
        $livreToutSurLeCode = new Livre();
        $livreToutSurLeCode->setTitre("Tout sur le code");
        $livreToutSurLeCode->setCouverture("http://www.iutbayonne.univ-pau.fr/~etchever/biblinum/toutSurLeCode.jpg");
        $livreToutSurLeCode->setResume("Pour concevoir du logiciel de qualitÃ©, dans tous les langages ConsidÃ©rÃ©e par beaucoup comme l'un des meilleurs ouvrages pratiques de programmation, la premiÃ¨re Ã©dition de cet ouvrage a aidÃ© les dÃ©veloppeurs Ã  mieux Ã©crire leur code depuis plus de dix ans, quel que soit le langage utilisÃ©. Aujourd'hui, ce classique a Ã©tÃ© entiÃ¨rement rÃ©visÃ© et mis Ã  jour avec des pratiques de pointe et des centaines de nouveaux exemples de code, illustrant l'art et la science de la construction logicielle. Utilisant toutes les connaissances disponibles, Steve McConnell synthÃ©tise les techniques les plus efficaces et les principes indispensables Ã  connaÃ®tre en un guide clair et pragmatique. Quels que soient votre niveau d'expÃ©rience, votre environnement de dÃ©veloppement ou l'importance de votre projet, cet ouvrage vous donnera toutes les informations nÃ©cessaires, vous guidera dans vos rÃ©flexions, et vous permettra de construire le meilleur code qui soit. DÃ©couvrez les meilleures techniques et les stratÃ©gies Ã©prouvÃ©es ! Concevoir pour une complexitÃ© minimum et une crÃ©ativitÃ© maximum. RÃ©colter les bÃ©nÃ©fices du dÃ©veloppement collaboratif. Appliquer les techniques de programmation dÃ©fensive pour rÃ©duire, et supprimer, les erreurs. Exploiter sans risque les opportunitÃ©s de rÃ©amÃ©nager le code, ou de le faire Ã©voluer. Utiliser des techniques de construction exactement adaptÃ©es Ã  votre projet. DÃ©boguer rapidement et, surtout, efficacement. RÃ©soudre les problÃ¨mes critiques le plus tÃ´t possible et de la meilleure faÃ§on.");
        $livreToutSurLeCode->setDatePar(new \DateTime('2005/02/14')); // Attention, il faut donner une date au format mysql pour l'enregistrement en BD: AAAA/MM/JJ
        $livreToutSurLeCode->setNomEdit("Dunod");
        $livreToutSurLeCode->setEmpruntable(true);
        $livreToutSurLeCode->addAuteur($auteurMcConnel);

        // On rend le livre persistant
        $manager->persist($livreToutSurLeCode);




        /* *********************************************************************************************** */
        /*                 CrÃ©ation du livre "Algorithmes : Notions de base" de Thomas Cormen              */
        /* *********************************************************************************************** */

        // ON CREE L'AUTEUR "Thomas Cormen"
        $auteurCormen = new Auteur();
        $auteurCormen->setNom("Cormen");
        $auteurCormen->setPrenom("Thomas");

        // On rend l'auteur persistant pour pouvoir y faire rÃ©fÃ©rence ensuite lorsqu'on crÃ©Ã© le livre
        $manager->persist($auteurCormen);

        // ON CREE LE LIVRE "Algorithmes : Notions de base"  
        $livreAlgorithmesNotionsDeBase = new Livre();
        $livreAlgorithmesNotionsDeBase->setTitre("Algorithmes : Notions de base");
        $livreAlgorithmesNotionsDeBase->setCouverture("http://www.iutbayonne.univ-pau.fr/~etchever/biblinum/algorithmesNotionsDeBase.jpg");
        $livreAlgorithmesNotionsDeBase->setResume("ConnaÃ®tre les bases du fonctionnement des algorithmes est essentiel pour tout futur ingÃ©nieur . Savoir par exemple comment un GPS calcule et optimise un itinÃ©raire en quelques secondes, ou comment une transaction en ligne peut-Ãªtre cryptÃ©e et sÃ©curisÃ©e.  Certains livres sur les algorithmes sont trÃ¨s abstraits, d'autres au contraire proposent des trucs et astuces pour programmer. Celui-ci est entre les deux : il a parfois recours aux mathÃ©matiques pour expliquer certaines notions, mais elles ont Ã©tÃ© rÃ©duites au strict minimum, et aucune expÃ©rience de la programmation n'est requise. Le but de ce livre est d'expliquer comment fonctionnent les algorithmes et comment on peut les Ã©valuer. Il explique Ã©galement comment modÃ©liser un problÃ¨me de faÃ§on Ã  ce qu'il puisse Ãªtre rÃ©solu par un ordinateur.");
        $livreAlgorithmesNotionsDeBase->setDatePar(new \DateTime('2013/10/02')); // Attention, il faut donner une date au format mysql pour l'enregistrement en BD: AAAA/MM/JJ
        $livreAlgorithmesNotionsDeBase->setNomEdit("Dunod");
        $livreAlgorithmesNotionsDeBase->setEmpruntable(true);
        $livreAlgorithmesNotionsDeBase->addAuteur($auteurCormen);

        // On rend le livre persistant
        $manager->persist($livreAlgorithmesNotionsDeBase);






        /* ***************************************************************************************************** */
        /* CrÃ©ation du livre "Algorithmique - Cours avec 957 exercices et 158 problÃ¨mes" de Thomas Cormen et al. */
        /* ***************************************************************************************************** */

        // ON CREE LES AUTEURS DU LIVRE
        $auteurLeiserson = new Auteur();
        $auteurLeiserson->setNom("Leiserson");
        $auteurLeiserson->setPrenom("Charles");

        $auteurRivest = new Auteur();
        $auteurRivest->setNom("Rivest");
        $auteurRivest->setPrenom("Ronald");

        $auteurStein = new Auteur();
        $auteurStein->setNom("Stein");
        $auteurStein->setPrenom("Clifford");


        // On rend les auteurs persistants pour pouvoir y faire rÃ©fÃ©rence ensuite lorsqu'on crÃ©Ã© le livre
        $manager->persist($auteurLeiserson);
        $manager->persist($auteurRivest);
        $manager->persist($auteurStein);

        // ON CREE LE LIVRE "Algorithmes : Notions de base"  
        $livreAlgorithmiqueCoursAvec957Exercices = new Livre();
        $livreAlgorithmiqueCoursAvec957Exercices->setTitre("Algorithmique - Cours avec 957 exercices et 158 problÃ¨mes");
        $livreAlgorithmiqueCoursAvec957Exercices->setCouverture("http://www.iutbayonne.univ-pau.fr/~etchever/biblinum/algorithmiqueCoursAvec957Exercices.jpg");
        $livreAlgorithmiqueCoursAvec957Exercices->setResume("Ce livre de cours traduit de l'amÃ©ricain, sans Ã©quivalent et d'accÃ¨s facile, est une introduction complÃ¨te Ã  l'algorithmique et s'adresse aussi bien aux Ã©tudiants qu'aux professionnels en informatique. L'Ã©ventail des algorithmes Ã©tudiÃ©s va des plus classiques (tris, hachage...) aux plus rÃ©cents (algorithmes parallÃ¨les...) permettant ainsi de passer progressivement des notions Ã©lÃ©mentaires aux thÃ¨mes les plus pointus. Les algorithmes sont prÃ©sentÃ©s dans un pseudo-code proche des langages Pascal, C et Fortan, ce qui les rend trÃ¨s faciles Ã  comprendre et Ã  implÃ©menter. Ils sont complÃ©tÃ©s par des preuves mathÃ©matiques et illustÃ©s par de nombreux exemples. Au total, plus de 920 exercices et 140 problÃ¨mes sont proposÃ©s.");
        $livreAlgorithmiqueCoursAvec957Exercices->setDatePar(new \DateTime('2010/06/23')); // Attention, il faut donner une date au format mysql pour l'enregistrement en BD: AAAA/MM/JJ
        $livreAlgorithmiqueCoursAvec957Exercices->setNomEdit("Dunod");
        $livreAlgorithmiqueCoursAvec957Exercices->setEmpruntable(true);
        $livreAlgorithmiqueCoursAvec957Exercices->addAuteur($auteurCormen);
        $livreAlgorithmiqueCoursAvec957Exercices->addAuteur($auteurLeiserson);
        $livreAlgorithmiqueCoursAvec957Exercices->addAuteur($auteurRivest);
        $livreAlgorithmiqueCoursAvec957Exercices->addAuteur($auteurStein);

        // On rend le livre persistant
        $manager->persist($livreAlgorithmiqueCoursAvec957Exercices);



        /* ******************************************************* */
        /*                    Enregistrement en BD                 */
        /* ******************************************************* */

        // On dÃ©clenche l'enregistrement de tous les livres et de leurs auteurs en BD
        $manager->flush();
    }
}