<?php

namespace EventIUT\SalonsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SalonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SalonRepository extends EntityRepository
{
/***********SALONS A VENIR*********/
   public function findAllSalonsAVenirDateASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY d.date ');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findAllSalonsAVenirDateDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY d.date DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findAllSalonsAVenirVilleASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY s.ville ');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }

   public function findAllSalonsAVenirVilleDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY s.ville DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findAllSalonsAVenirNomASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY s.nom');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findAllSalonsAVenirNomDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date > CURRENT_TIMESTAMP() ORDER BY s.nom DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findSalonAVenirRecherche($recherche){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE s.nom LIKE :recherche and d.date > CURRENT_TIMESTAMP()');
	$requete->setParameters(array('recherche'=>'%'.$recherche.'%'));
   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   /***********SALONS PASSES*********/
   
   
   
   public function findAllSalonsPasseDateASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY d.date DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
   
   public function findAllSalonsPasseDateDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY d.date DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }

   public function findAllSalonsPasseVilleASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY s.ville');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }  
   
   public function findAllSalonsPasseVilleDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY s.ville DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
 
   public function findAllSalonsPasseNomASC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY s.nom');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
 
   public function findAllSalonsPasseNomDESC(){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE d.date <= CURRENT_TIMESTAMP() ORDER BY s.nom DESC');

   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
 
   public function findSalonPasseRecherche($recherche){
  $gestionnaireEntity= $this->_em;
  $requete=$gestionnaireEntity->createQuery('SELECT s 
												FROM EventIUTSalonsBundle:Salon s LEFT JOIN s.datesSalon d
												WHERE s.nom LIKE :recherche and d.date <= CURRENT_TIMESTAMP()');
	$requete->setParameters(array('recherche'=>'%'.$recherche.'%'));
   $tabSalon=$requete->getResult();
   return $tabSalon;
   }
 }
